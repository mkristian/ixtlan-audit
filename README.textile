h1. Rails Audit Log

p. once you have a logged in user in your system, the usual request log can be improved by added the login name of the user to log output. but since you associate data with a "real" person privacy comes into play. the best privacy protection is not to store data, but in our case the compromise is to just define how long the data shall be stored (define an expiration date for the data).

h1. The Code

p. there are two main classes the Audit model which is an ActiveRecord or Datamapper or ActiveModel (memory only) which can be made persistent and which carries.

* created_at
* username
* message
* expired_at

the business methods are

* all_for_user(username, before = nil, after = nil, query = nil, &block)
* all_for(before = nil, after = nil, query = nil, &block)

with the block you can filter out result like

bc. all_for { |username| username == 'root' }

p. the next is the AuditManager which shall have a single instance per application and has following methods

* reconfigure_expiration_after(days)
* daily_cleanup

p. the cleanup can be done via schedule/timer framework or with an rails before filter with the overhead of checking a date for each request (default). if you do not want the default you need to add

bc.  skip_before_filter :audit_daily_cleanup

p. if you have a controller where you do not want to use the audit log then do (:only and :except option do apply as well):

bc. skip_after_filter :audit_log

p. in case you need a special output from a model then you can add a *to_log* method to your model, i.e.

bc. class MyModel
   def to_log
     "MyModel(object_id=#{object_id})"
   end
end
p. the controller needs to have a *current_user* methods to retrieve the user object. the user object needs to have a *username* method.you can customize the 
p. there is a rails controller module which you could use like below and which has only the index action with following parameters and renders html, xml, json:

* username
* before
* after
* keywords

bc. class AuditController < AbstractController
      include Ixtlan::Audit::AuditController
    end